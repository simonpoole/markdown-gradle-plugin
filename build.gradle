/*
 * Copyright 2013-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 buildscript {
     repositories {
         jcenter()
     }
     dependencies {
         classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
     }
 }
 
plugins {
    id 'com.jfrog.bintray' version '1.8.1'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'net.nemerosa.versioning' version '2.7.1'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'idea'
    id 'groovy'
    id 'maven-publish'
}

apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/publish.gradle'

apply plugin: 'eclipse'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'com.overzealous:remark:1.1.0'
    compile 'org.jsoup:jsoup:1.11.3'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'com.vladsch.flexmark:flexmark-all:0.42.10'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile 'cglib:cglib-nodep:3.2.8'
}

test {
    testLogging {
        showStandardStreams = true
    }
}

javadoc {
    excludes = ['**/*.html', 'META-INF/**']

    options.use         = true
    options.splitIndex  = true
    options.encoding    = 'UTF-8'
    options.author      = true
    options.version     = true
    options.windowTitle = "$project.name $project.version API"
    options.docTitle    = "$project.name $project.version API"
    options.links       = ['http://docs.oracle.com/javase/7/docs/api/']
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the javadoc'
    classifier 'javadoc'
    from javadoc.destinationDir
}

jar.finalizedBy sourcesJar
jar.finalizedBy javadocJar

artifacts {
    sourcesJar
    javadocJar
}

task publishRelease(dependsOn: [bintrayUpload, publishPlugins]) {}
