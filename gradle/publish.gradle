/*
 * Copyright 2013-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
            'Build-Date': project.buildDate,
            'Build-Time': project.buildTime,
            'Build-Revision': versioning.info.commit,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }

    metaInf {
        from '.'
        include 'LICENSE*'
    }
}

def pomConfig = {
    name project.name
    description project.project_description
    url project.project_website
    inceptionYear '2013'
    licenses {
        license([:]) {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    scm {
        url project.project_vcs
    }
    developers {
        [
            aalmiray : 'Andres Almiray',
            tednaleid: 'Ted Naleid',
        ].each { devId, devName ->
            developer {
                id devId
                name devName
                roles {
                    role 'Developer'
                }
            }
        }
    }
    contributors {
        [
            madmas: 'Markus Schlichting',
            iruiz : 'Ix-chel Ruiz'
        ].each { devId, devName ->
            contributor {
                name devName
                roles {
                    role 'contributor'
                }
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
            }
        }
    }
}

//if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
//if (!project.hasProperty('bintrayKey')) ext.bintrayKey = ''

bintray {
//    user = bintrayUsername
//    key = bintrayKey
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        // userOrg = 'aalmiray'
        repo = 'gradle'
        name = 'markdown-gradle-plugin'
        desc = project.project_description
        licenses = ['Apache-2.0']
        labels = ['markdown']
        websiteUrl = project.project_website
        issueTrackerUrl = project.project_issues
        vcsUrl = project.project_vcs
        publicDownloadNumbers = true
        version {
            attributes = ['gradle-plugin': 'ch.poole.markdown.convert:ch.poole.gradle:markdown-gradle-plugin ']
        }
    }
}

pluginBundle {
    website = project.project_website
    vcsUrl = project.project_vcs
    description = project.project_description
    tags = ['markdown']

    plugins {
        markdownPlugin {
            id = 'ch.poole.markdown.convert'
            displayName = 'Markdown Gradle Plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }
}